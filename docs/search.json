[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 jhk0530 Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jinhwan Kim. Maintainer, author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim J (2022). door: Shiny module statgarten. R package version 0.1.7, https://github.com/statgarten/door.","code":"@Manual{,   title = {door: Shiny module for statgarten},   author = {Jinhwan Kim},   year = {2022},   note = {R package version 0.1.7},   url = {https://github.com/statgarten/door}, }"},{"path":"/index.html","id":"yellow_heart-door-","dir":"","previous_headings":"","what":"Shiny module for statgarten","title":"Shiny module for statgarten","text":"Shiny application data analysis.","code":""},{"path":"/index.html","id":"clipboard-dependency","dir":"","previous_headings":"","what":"üìã Dependency","title":"Shiny module for statgarten","text":"board colorpen data.table - 1.14.2 datamods - 1.3.4 datatoys dplyr - 1.0.10 DT - 0.25 esquisse - 1.1.2 flexdashboard - 0.6.0 GGally - 2.1.2 golem - 0.3.3 haven - 2.5.1 htmlwidgets - 1.5.4 jstable - 1.0.7 phosphoricons - 0.1.2 plotly - 4.10.0 reactable - 0.3.0 readr - 2.1.2 readxl - 1.4.1 rmarkdown - 2.16 scissor shiny - 1.7.2 shiny.i18n - 0.2.0 shinycssloaders - 1.0.0.9000 shinydashboard - 0.7.2 shinydashboardPlus - 2.0.3 shinyglide - 0.1.3 shinyjs - 2.1.0 shinyWidgets - 0.7.3 soroban stove tibble - 3.1.8 tidyr - 1.2.1","code":""},{"path":"/index.html","id":"wrench-install","dir":"","previous_headings":"","what":"üîß Install","title":"Shiny module for statgarten","text":"","code":"remotes::install_github('statgarten/door') library(door)  run_app() # from door"},{"path":"/index.html","id":"blush-authors","dir":"","previous_headings":"","what":"üòä Authors","title":"Shiny module for statgarten","text":":octocat: Jinhwan Kim @jhk0530 :octocat: Changwoo Lim @ChangwooLim","code":""},{"path":"/index.html","id":"memo-license","dir":"","previous_headings":"","what":"üìù License","title":"Shiny module for statgarten","text":"Copyright ¬©Ô∏è 2022 Jinhwan Kim, Changwoo Lim. project MIT licensed README generated üíï shinyReadme https://jhkim.shinyapps.io/shinyReadme/ special using README.Rmd instead just README.md? can include R chunks like : ‚Äôll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples.","code":""},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application ‚Äî run_app","title":"Run the Shiny Application ‚Äî run_app","text":"Run Shiny Application","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application ‚Äî run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application ‚Äî run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""}]
